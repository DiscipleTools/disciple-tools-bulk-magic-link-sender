import{r as e,$ as t}from"../../lit-element-69ea4448.js";import{o as i}from"../../class-map-52a99a0c.js";import{D as s}from"../dt-form-base.js";import"../../icons/dt-spinner.js";import"../../icons/dt-checkmark.js";import"../../icons/dt-exclamation-circle.js";import"../dt-label/dt-label.js";window.customElements.define("dt-text",class extends s{static get styles(){return[...super.styles,e`input{color:var(--dt-form-text-color,#000);appearance:none;background-color:var(--dt-text-background-color,#fefefe);border:1px solid var(--dt-text-border-color,#fefefe);border-radius:0;box-shadow:inset 0 1px 2px hsl(0deg 0% 4% / 10%);box-sizing:border-box;display:block;font-family:inherit;font-size:1rem;font-weight:300;height:2.5rem;line-height:1.5;margin:0 0 1.0666666667rem;padding:.5333333333rem;transition:box-shadow .5s,border-color .25s ease-in-out;width:100%}input:disabled,input[readonly],textarea:disabled,textarea[readonly]{background-color:var(--dt-text-disabled-background-color,#e6e6e6);cursor:not-allowed}input:focus-visible,input:focus-within{outline:0}input.invalid{border-color:var(--dt-text-border-color-alert)}`]}static get properties(){return{...super.properties,id:{type:String},name:{type:String},value:{type:String,reflect:!0},disabled:{type:Boolean},onchange:{type:String}}}onChange(e){const t=new CustomEvent("change",{detail:{field:this.name,oldValue:this.value,newValue:e.target.value}});this.value=e.target.value,this._setFormValue(this.value),this.dispatchEvent(t)}_validateRequired(){const{value:e}=this,t=this.shadowRoot.querySelector("input");""===e&&this.required?(this.invalid=!0,this.internals.setValidity({valueMissing:!0},this.requiredMessage||"This field is required",t)):(this.invalid=!1,this.internals.setValidity({}))}get classes(){return{"text-input":!0,invalid:this.touched&&this.invalid}}render(){return t`${this.labelTemplate()}<div class="input-group"><input id="${this.id}" name="${this.name}" aria-label="${this.label}" type="text" ?disabled="${this.disabled}" ?required="${this.required}" class="${i(this.classes)}" .value="${this.value}" @change="${this.onChange}" novalidate> ${this.touched&&this.invalid?t`<dt-exclamation-circle class="icon-overlay alert"></dt-exclamation-circle>`:null} ${this.loading?t`<dt-spinner class="icon-overlay"></dt-spinner>`:null} ${this.saved?t`<dt-checkmark class="icon-overlay success"></dt-checkmark>`:null}</div>`}});
